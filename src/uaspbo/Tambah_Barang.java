/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package uaspbo;

import common.Logger;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.lang.System.Logger.Level;
import java.sql.*;
import java.util.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

public class Tambah_Barang extends javax.swing.JFrame {//implements Controller_Interface{
    private void clear(){
        KODE_BARANG.setEditable(true);
        KODE_BARANG.setText(null);
        NAMA_BARANG.setText(null);
        JENIS_BARANG.setText(null);
        HARGA.setText(null);
        STOK.setText(null);
    }
    /**
     * Creates new form Tambah_Barang
     */
    List_Barang lb = new List_Barang();
    public Tambah_Barang() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        KODE_BARANG = new javax.swing.JTextField();
        NAMA_BARANG = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        JENIS_BARANG = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        HARGA = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        STOK = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        save = new javax.swing.JButton();
        batal = new javax.swing.JButton();
        update = new javax.swing.JButton();
        delete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setText("KODE");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 102, 0));
        jLabel1.setText("TAMBAH BARANG");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(jLabel2))
        );

        KODE_BARANG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KODE_BARANGActionPerformed(evt);
            }
        });

        jLabel3.setText("NAMA");

        jLabel4.setText("JENIS");

        jLabel5.setText("HARGA");

        jLabel6.setText("STOK");

        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        batal.setText("Batal");
        batal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                batalActionPerformed(evt);
            }
        });

        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 2, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(HARGA)
                            .addComponent(JENIS_BARANG)
                            .addComponent(NAMA_BARANG)
                            .addComponent(KODE_BARANG)
                            .addComponent(STOK, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(save)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(update)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(delete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(batal)))
                .addGap(88, 88, 88))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(KODE_BARANG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NAMA_BARANG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JENIS_BARANG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HARGA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(STOK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(save)
                    .addComponent(batal)
                    .addComponent(delete)
                    .addComponent(update))
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        try{
            
            String sql = "INSERT INTO PEMBELIAN (KODE_BARANG, NAMA_BARANG, JENIS_BARANG, HARGA, STOK) "
                    + "VALUES('"+KODE_BARANG.getText()+"', '"+NAMA_BARANG.getText()+"', '"+JENIS_BARANG.getText()+"', '"+HARGA.getText()+"', '"+STOK.getText()+"')";
                    
            java.sql.Connection connrp = (Connection)Koneksi.getKoneksi();
            java.sql.PreparedStatement pstmt = connrp.prepareStatement(sql);
            pstmt.execute();
            JOptionPane.showMessageDialog(null,"Berhasil menyimpan data..");
            //pstmt.close();
            //batalActionPerformed(java.awt.event.ActionEvent evt);
            lb.setVisible(true);
            lb.toFront();
            
        }catch (SQLException err) {
            JOptionPane.showMessageDialog(this,err.getMessage());
            //Logger.getLogger(Koneksi.class.getName()).log(Level.SEVERE, null, x);
        }
//        Menu_awal.c.insert(KODE_BARANG.getText(), NAMA_BARANG.getText(), JENIS_BARANG.getText(), Integer.parseInt(HARGA.getText()), Integer.parseInt(STOK.getText()));
//        this.setVisible(false);
    }//GEN-LAST:event_saveActionPerformed

    private void KODE_BARANGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KODE_BARANGActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_KODE_BARANGActionPerformed

    private void batalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_batalActionPerformed
        lb.setVisible(true);
        lb.toFront();
        //System.exit(0);
    }//GEN-LAST:event_batalActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        try{
            //if(connrp!=null){
            //Statement stmt= connrp.createStatement();
            String sql="UPDATE pembelian set "+
            "KODE_BARANG='"+KODE_BARANG.getText()+
            "',NAMA_BARANG='"+NAMA_BARANG.getText()+
            "',JENIS_BARANG='"+JENIS_BARANG.getText()+
            "',HARGA='"+Integer.valueOf(HARGA.getText())+
            "',STOK='"+Integer.valueOf(STOK.getText())+
            "' where KODE_BARANG='"+KODE_BARANG.getText()+"'";
            java.sql.Connection connrp = (Connection)Koneksi.getKoneksi();
            java.sql.PreparedStatement pstmt = connrp.prepareStatement(sql);
            pstmt.execute();
            JOptionPane.showMessageDialog(null,"UPDATE BERHASIL!");
            //}
        } catch (SQLException err) {
            JOptionPane.showMessageDialog(this,err.getMessage());
 }
        lb.tampilkan_data();
        clear();
 lb.toFront();
 lb.setVisible(true);
//        int baris = lb.list.getSelectedRow();
//        String kode = KODE_BARANG.getText();
//        String nama = NAMA_BARANG.getText();
//        String jenis = JENIS_BARANG.getText();
//        String harga = HARGA.getText();
//        String stok = STOK.getText();
//        try{
////            String sql = "UPDATE BARANG set KODE_BARANG="+KODE_BARANG.getText().toString()+
////                        ", NAMA_BARANG="+NAMA_BARANG.getText().toString()+
////                        ", JENIS_BARANG="+JENIS_BARANG.getText().toString()+
////                        ", HARGA="+Integer.valueOf(HARGA.getText())+
////                        ", STOK="+Integer.valueOf(STOK.getText())+
////                        " where KODE_BARANG="+KODE_BARANG.getText().toString()+"";
//            String sql = "UPDATE pembelian SET KODE_BARANG = ?, NAMA_BARANG = ?, JENIS_BARANG = ?, HARGA = ?, STOK = ? WHERE KODE_Barang = ?";
//            java.sql.Connection connrp = (Connection)Koneksi.getKoneksi();
//            java.sql.PreparedStatement pstmt = connrp.prepareStatement(sql);
//            //pstmt.executeUpdate(sql);
//            
//            pstmt.setString(5, kode);
//            pstmt.setString(1, nama);
//            pstmt.setString(2, jenis);
//            pstmt.setString(3, harga);
//            pstmt.setString(4, stok);
//            pstmt.executeUpdate();
//            pstmt.close();
//            JOptionPane.showMessageDialog(null,"Berhasil update data!");
//            
//            //batalActionPerformed(java.awt.event.ActionEvent evt);
////            save.setEnabled(false);
////            update.setEnabled(true);
////            delete.setEnabled(false);
////            batal.setEnabled(true);
//            lb.setVisible(true);
//            lb.toFront();
//            
//        }catch (SQLException err) {
//            JOptionPane.showMessageDialog(this,err.getMessage());
//            //Logger.getLogger(Koneksi.class.getName()).log(Level.SEVERE, null, x);
//        }
        
    }//GEN-LAST:event_updateActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        try{
            String sql="DELETE FROM pembelian WHERE KODE_BARANG='"+KODE_BARANG.getText()+"'";
            java.sql.Connection connrp = (Connection)Koneksi.getKoneksi();
            java.sql.PreparedStatement pstmt = connrp.prepareStatement(sql);
            pstmt.execute();
            JOptionPane.showMessageDialog(null,"HAPUS BERHASIL!");
            //}
        } catch (SQLException err) {
            JOptionPane.showMessageDialog(this,err.getMessage());
 }
        lb.tampilkan_data();
        clear();
 lb.toFront();
 lb.setVisible(true);
        
//        lb.tampilkan_data();
//        int baris = lb.list.getSelectedRow();
//        System.out.println(baris);
//        if (baris == -1) {
//            return;
//        }
//        String kode = (String) lb.dtm.getValueAt(baris, 0);
//        
//        int pernyataan = JOptionPane.showConfirmDialog(null, "Data ini akan dihapus", "Konfirmasi", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);
//        if (pernyataan == JOptionPane.OK_OPTION) {
//            try {
//                Connection connrp = Koneksi.getKoneksi();
//                String sql = "DELETE FROM pembelian where KODE_BARANG = '"+KODE_BARANG.getText().toString()+"'";
//                PreparedStatement pstmt = connrp.prepareStatement(sql);
//                pstmt.setString(1, kode);
//                pstmt.executeUpdate();
//                pstmt.close();
//                JOptionPane.showMessageDialog(null, "Data sudah dihapus!!");
//            } catch (Exception err) {
//                System.out.println("ERORR!"+err);
//            }
//        }
//        if(pernyataan == JOptionPane.CANCEL_OPTION){}
    }//GEN-LAST:event_deleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tambah_Barang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tambah_Barang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tambah_Barang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tambah_Barang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tambah_Barang().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField HARGA;
    public javax.swing.JTextField JENIS_BARANG;
    public javax.swing.JTextField KODE_BARANG;
    public javax.swing.JTextField NAMA_BARANG;
    public javax.swing.JTextField STOK;
    private javax.swing.JButton batal;
    public javax.swing.JButton delete;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    public javax.swing.JButton save;
    public javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables

//
//    @Override
//    public ArrayList<Model> getArrayList() {
//        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
//    }
//
//    @Override
//    public void setArrayList(ArrayList<Model> listData) {
//        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
//    }
//
//    @Override
//    public int getArrayListSize() {
//        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
//    }
//
//    @Override
//    public void insert(String kodeBarang, String namaBarang, String jenisBarang, int hargaBarang, int stokBarang) {
//        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
//    }
//
//    @Override
//    public ArrayList<Model> setArrayList(int i, int stokSisa) {
//        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
//    }
}
